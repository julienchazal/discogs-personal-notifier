/* src/App.svelte generated by Svelte v3.20.1 */
import { SvelteComponentDev, add_location, append_dev, attr_dev, create_component, destroy_component, detach_dev, dispatch_dev, element, init, insert_dev, mount_component, noop, safe_not_equal, space, transition_in, transition_out, validate_slots } from "/dist/web_modules/svelte/internal.js";
import Search from "./Search.js";
const file = "src/App.svelte";

function add_css() {
  var style = element("style");
  style.id = "svelte-sli7vy-style";
  style.textContent = "html{font-size:14px;font-family:Arial, sans-serif }.wrapper.svelte-sli7vy{padding:3rem 1rem}h1.svelte-sli7vy{text-align:center;font-size:2rem;color:#41adff}\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiQXBwLnN2ZWx0ZSIsInNvdXJjZXMiOlsiQXBwLnN2ZWx0ZSJdLCJzb3VyY2VzQ29udGVudCI6WyI8c2NyaXB0PlxuICAgIGltcG9ydCBTZWFyY2ggZnJvbSAnLi9TZWFyY2gnO1xuICAgIGxldCBncmVldCA9ICdEaXNjb2dzIHBlcnNvbmFsIG5vdGlmaWVyJztcbjwvc2NyaXB0PlxuXG48ZGl2IGNsYXNzPVwid3JhcHBlclwiPlxuICAgIDxoMT57Z3JlZXR9PC9oMT5cbiAgICA8U2VhcmNoIC8+XG48L2Rpdj5cblxuXG48c3R5bGU+XG4gICAgOmdsb2JhbChodG1sKSB7XG4gICAgICAgIGZvbnQtc2l6ZTogMTRweDtcbiAgICAgICAgZm9udC1mYW1pbHk6IEFyaWFsLCBzYW5zLXNlcmlmIDtcbiAgICB9XG4gICAgLndyYXBwZXIge1xuICAgICAgICBwYWRkaW5nOiAzcmVtIDFyZW07XG4gICAgfVxuICAgIGgxIHtcbiAgICAgICAgdGV4dC1hbGlnbjogY2VudGVyO1xuICAgICAgICBmb250LXNpemU6IDJyZW07XG4gICAgICAgIGNvbG9yOiAjNDFhZGZmO1xuICAgIH1cbjwvc3R5bGU+XG4iXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBWVksSUFBSSxBQUFFLENBQUMsQUFDWCxTQUFTLENBQUUsSUFBSSxDQUNmLFdBQVcsQ0FBRSxLQUFLLENBQUMsQ0FBQyxVQUFVLENBQUMsQUFDbkMsQ0FBQyxBQUNELFFBQVEsY0FBQyxDQUFDLEFBQ04sT0FBTyxDQUFFLElBQUksQ0FBQyxJQUFJLEFBQ3RCLENBQUMsQUFDRCxFQUFFLGNBQUMsQ0FBQyxBQUNBLFVBQVUsQ0FBRSxNQUFNLENBQ2xCLFNBQVMsQ0FBRSxJQUFJLENBQ2YsS0FBSyxDQUFFLE9BQU8sQUFDbEIsQ0FBQyJ9 */";
  append_dev(document.head, style);
}

function create_fragment(ctx) {
  let div;
  let h1;
  let t1;
  let current;
  const search = new Search({
    $$inline: true
  });
  const block = {
    c: function create() {
      div = element("div");
      h1 = element("h1");
      h1.textContent = `${
      /*greet*/
      ctx[0]}`;
      t1 = space();
      create_component(search.$$.fragment);
      attr_dev(h1, "class", "svelte-sli7vy");
      add_location(h1, file, 6, 4, 126);
      attr_dev(div, "class", "wrapper svelte-sli7vy");
      add_location(div, file, 5, 0, 100);
    },
    l: function claim(nodes) {
      throw new Error("options.hydrate only works if the component was compiled with the `hydratable: true` option");
    },
    m: function mount(target, anchor) {
      insert_dev(target, div, anchor);
      append_dev(div, h1);
      append_dev(div, t1);
      mount_component(search, div, null);
      current = true;
    },
    p: noop,
    i: function intro(local) {
      if (current) return;
      transition_in(search.$$.fragment, local);
      current = true;
    },
    o: function outro(local) {
      transition_out(search.$$.fragment, local);
      current = false;
    },
    d: function destroy(detaching) {
      if (detaching) detach_dev(div);
      destroy_component(search);
    }
  };
  dispatch_dev("SvelteRegisterBlock", {
    block,
    id: create_fragment.name,
    type: "component",
    source: "",
    ctx
  });
  return block;
}

function instance($$self, $$props, $$invalidate) {
  let greet = "Discogs personal notifier";
  const writable_props = [];
  Object.keys($$props).forEach(key => {
    if (!~writable_props.indexOf(key) && key.slice(0, 2) !== "$$") console.warn(`<App> was created with unknown prop '${key}'`);
  });
  let {
    $$slots = {},
    $$scope
  } = $$props;
  validate_slots("App", $$slots, []);

  $$self.$capture_state = () => ({
    Search,
    greet
  });

  $$self.$inject_state = $$props => {
    if ("greet" in $$props) $$invalidate(0, greet = $$props.greet);
  };

  if ($$props && "$$inject" in $$props) {
    $$self.$inject_state($$props.$$inject);
  }

  return [greet];
}

class App extends SvelteComponentDev {
  constructor(options) {
    super(options);
    if (!document.getElementById("svelte-sli7vy-style")) add_css();
    init(this, options, instance, create_fragment, safe_not_equal, {});
    dispatch_dev("SvelteRegisterComponent", {
      component: this,
      tagName: "App",
      options,
      id: create_fragment.name
    });
  }

}

export default App;